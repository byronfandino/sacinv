{"version":3,"names":[],"mappings":"","sources":["cliente/cliente_modal_actualizar.js"],"sourcesContent":["import { Ciudad } from '../global/class/ciudad.js';\nimport { Cliente } from '../global/class/cliente.js';\n\ndocument.addEventListener('DOMContentLoaded', () =>{\n    // Cargar ciudades en el comboBox cada vez que se cambie de departamento\n    const ciudad = new Ciudad();\n    //Se pasa por parámetro el id del Departamento, y el id de la ciudad \n    ciudad.cargarCiudades('cod_depart_modal', 'fk_ciudad_modal');\n\n    const objetoCliente = {\n        urlApiListar: '/cliente/api',\n        urlActualizar : '/cliente/actualizar',\n        //Se crea la estructura de la tabla ya que esta se incorpora dentro del formulario del cliente principal y se debe actualizar la tabla después e actualiar el registro\n        estructuraTabla : [\n            {cedula_nit: 'Cédula / Nit', posicion: 1, class:[]},\n            {nombre: 'Nombre del Cliente', posicion: 2, class:[]},\n            {telefono: 'Celular', posicion:3, class: []},\n            {direccion: 'Dirección', posicion:4, class: []},\n            {nombre_ciudad: 'Ciudad', posicion:5, class: []},\n            {nombre_depart: 'Departamento', posicion:6, class: []}\n        ]\n    }\n\n    // Se envia el id del formulario para el envio de registro\n    const cliente = new Cliente(objetoCliente);\n    formularioActualizarRegistro(cliente);\n    botonCerrarModal();\n\n});\n\nfunction formularioActualizarRegistro(cliente){\n\n    const formulario = document.querySelector('#form_cliente_modal');\n\n    formulario.addEventListener('submit', async (e) => {\n        // Prevenir el comportamiento por defecto del formulario\n        e.preventDefault();\n\n        let formData = new FormData(formulario); // Crear un objeto FormData con los datos del formulario\n           \n        // Crear un nuevo FormData\n        let nuevoFormData = new FormData();\n        \n        // Modificar las keys\n        for (let [key, value] of formData.entries()) {\n            if (key === 'id_cliente_modal') {\n            nuevoFormData.append('id_cliente', value);\n            } else if (key === 'cedula_nit_modal') {\n            nuevoFormData.append('cedula_nit', value);\n            } else if (key === 'nombre_modal') {\n                nuevoFormData.append('nombre', value);\n            } else if (key === 'telefono_modal') {\n                nuevoFormData.append('telefono', value); \n            }else if (key === 'direccion_modal') {\n                nuevoFormData.append('direccion', value); \n            }else if (key === 'fk_ciudad_modal') {\n                nuevoFormData.append('fk_ciudad', value);\n            }else {\n                 // Mantener las otras keys sin cambios\n                nuevoFormData.append(key, value); \n            }\n        }\n\n        const rta = cliente.actualizarRegistro(nuevoFormData);\n        if(rta){\n            cliente.listarRegistro();\n            cerrarModal();\n        }\n    });\n}\n\nfunction botonCerrarModal(){\n    const btnCancelar = document.querySelector('#cerrar-modal');\n    btnCancelar.addEventListener('click', e =>{\n        e.preventDefault();\n        cerrarModal();\n    });\n}\n\nfunction cerrarModal(){\n    const modalCliente = document.querySelector('#modal-cliente');\n    if (!modalCliente.className.includes('ocultar')){\n        modalCliente.classList.add('ocultar');\n    }\n}\n"],"file":"cliente_modal_actualizar.js"}