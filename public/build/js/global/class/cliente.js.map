{"version":3,"names":[],"mappings":"","sources":["global/class/cliente.js"],"sourcesContent":["import { Ciudad } from \"./ciudad.js\";\nimport { ModeloBase} from \"./ModeloBase.js\";\n\nexport class Cliente extends ModeloBase {\n    constructor (objeto){\n        super(objeto);\n        //Obtenemos el listado de los campos modal y su equivalente a los campos del formulario principal para evitar conflicto de nombres y cargar los datos en la ventana modal del cliente.\n        this.equivalenciaCamposModal = objeto.equivalenciaCamposModal;\n        // Guarda el id de la ciudad seleccionada para hacer el cambio de valor en el combo de la ventana modal\n        this.valueComboCiudad = null;\n        \n    }\n\n    asignarValoresVentanaModal(objetoEncontrado) {\n        // Convertir el objeto encontrado en un array de pares clave-valor\n        const arrayCliente = Object.entries(objetoEncontrado);\n    \n        arrayCliente.forEach(([key, value]) => {\n\n            // Encontrar el campo correspondiente en this.equivalenciaCamposModal\n            const campo = this.equivalenciaCamposModal.find(campo => campo[key]);\n    \n            if (campo) {\n                // Desestructurar el par clave-valor del campo\n                const [, campoId] = Object.entries(campo)[0];\n                const campoModal = document.querySelector(`#${campoId}`);\n                \n                if (campoModal) {\n                    \n                    campoModal.value = value;\n                    \n                    if(campoModal.tagName == 'SELECT' && campoModal.id == 'fk_ciudad_modal'){\n                        \n                        this.valueComboCiudad = value;             \n                    }\n                }\n            }\n        });\n\n        this.cargarComboCiudadModal();\n    }\n\n    async cargarComboCiudadModal(){\n        const ciudad = new Ciudad();\n        //Se pasa por par√°metro el id del Departamento, id \n        await ciudad.cargarCiudades('cod_depart_modal', 'fk_ciudad_modal');\n        \n        ciudad.cambiarValue(this.valueComboCiudad);\n    }\n}\n"],"file":"cliente.js"}