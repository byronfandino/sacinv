{"version":3,"names":[],"mappings":"","sources":["global/class/deuda.js"],"sourcesContent":["import { cargarFechaHoraActual, limpiarFormulario, url } from \"../parametros.js\";\nimport { ModeloBase } from \"./ModeloBase.js\";\n\nexport class Deuda extends ModeloBase{\n    constructor(objeto){\n        super(objeto);\n    }\n\n    formularioAgregar(idFormulario){\n\n        const formulario = document.querySelector(`#${idFormulario}`);\n        \n        formulario.addEventListener('submit', async (e) => {\n            \n            // Prevenir el comportamiento por defecto del formulario\n            e.preventDefault();\n           \n            const campoCliente = document.querySelector('#fk_cliente_deudor');\n            const msgError = campoCliente.nextElementSibling;\n            // console.log(campoCliente.value);\n            \n            //Se verifica si se seleccionó un cliente\n            if (campoCliente.value != ''){\n\n                msgError.classList.add('ocultar');\n                msgError.textContent = \"\";\n\n                // Si pasa la validación de los campos envie la petición al post\n                if(this.revisarCampos()){\n\n                    const dateTimeNow = cargarFechaHoraActual();\n        \n                    let formData = new FormData(formulario);\n                    formData.append('fecha', dateTimeNow.fecha);\n                    formData.append('hora', dateTimeNow.hora);\n\n                    //También se sobreescribe el método agregarRegistro\n                    const rta = await this.agregarRegistro(formData);\n                    \n                    // Si se agregó el registro correctamente debe refrescar la tabla\n                    if (rta){\n                        \n                        //Obtenemos un arreglo de nombres de los campos a partir del array de objetos validacionCampos[];\n                        const nombreCamposFormulario = this.validacionCampos.map(obj => Object.keys(obj)[0]);\n    \n                        limpiarFormulario(nombreCamposFormulario);\n                        this.listarRegistros(campoCliente.value);\n\n                    }\n                }\n            \n            }else{\n    \n                msgError.classList.remove('ocultar');\n                msgError.textContent = \"Debe seleccionar un cliente\";\n            }\n            \n        });\n    }\n\n    //Se pasa por parámetro el id del cliente\n    async listarRegistros(id){\n        //Se cambia la url \n        if (!this.url.apiConsultar) {\n            console.error(\"La URL para consultar no está definida.\");\n            return;\n        }\n\n        const urlFiltrar = url + this.url.apiConsultar;\n        const formData = new FormData();\n        \n        formData.append('id', id);\n\n        try {\n            const response = await fetch(urlFiltrar, {\n                method: 'POST',\n                body: formData,\n                headers: { 'Accept': 'application/json' }\n            });\n\n            if (!response.ok) throw new Error('No hay conexión con el servidor');\n\n            const data = await response.json();\n            this.registros = data;\n            this.mostrarTotalRegistros(this. idTotalRegistros,this.registros.length);\n            this.crearTabla(this.registros);\n\n        } catch (error) {\n            console.error('Codigo de error:', error);\n        }\n    }\n\n    //Se pasa por parámetro del formData creado\n    async agregarRegistro(formulario){\n\n        const urlGuardar = url + this.url.agregar;\n   \n        // Hacer una solicitud fetch para enviar los datos del formulario\n        try {\n\n            const response = await fetch(urlGuardar, {\n                method: 'POST',\n                body: formulario,\n                headers: { 'Accept': 'application/json' }\n            });\n\n            if (!response.ok) throw new Error('No hay conexión con el servidor');\n\n            const data = await response.json();\n            const rta = this.handleResponse(data);\n            return rta;\n\n        } catch (error) {\n            console.error('Codigo de error:', error);\n        }\n    }\n}"],"file":"deuda.js"}