{"version":3,"names":[],"mappings":"","sources":["global/class/persona.js"],"sourcesContent":["import { consultarAPI, url } from \"../parametros.js\";\n\nexport class Persona{\n    constructor (objeto){\n        this.objeto = objeto;\n        this.urlApiListar = objeto.urlApiListar;\n        this.urlAgregar = objeto.urlAgregar;\n        this.urlActualizar = objeto.urlActualizar;\n        this.urlEliminar = objeto.urlEliminar;\n    }\n\n    async listar(){\n        if (!this.urlApiListar) {\n            console.error(\"La URL para listar no est치 definida.\");\n            return;\n        }\n        try { \n            const datos = await consultarAPI(this.urlApiListar); \n            return datos;\n        } catch (error) { \n            console.error('Error al listar clientes:', error); \n        }\n    }\n\n    async agregar(formData){\n\n        const urlGuardar = url + this.urlAgregar;\n   \n        // Hacer una solicitud fetch para enviar los datos del formulario\n        try {\n            const response = await fetch(urlGuardar, {\n                method: 'POST',\n                body: formData,\n                headers: { 'Accept': 'application/json' }\n            });\n            if (!response.ok) throw new Error('No hay conexi칩n con el servidor');\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error('Codigo de error:', error);\n        }\n    }\n\n    async actualizar(formData){\n        \n        const urlActualizar = url + this.urlActualizar;\n        // Hacer una solicitud fetch para enviar los datos del formulario\n        try {\n            const response = await fetch(urlActualizar, {\n                method: 'POST',\n                body: formData,\n                headers: { 'Accept': 'application/json' }\n            });\n\n            if (!response.ok) \n                throw new Error('No hay conexi칩n con el servidor');\n            \n            const data = await response.json();\n            return data;\n\n        } catch (error) {\n            console.error('Codigo de error:', error);\n        }\n    }\n\n    async eliminar(formData){\n\n        try {\n            const response = await fetch(this.urlEliminar, {\n                method: 'POST',\n                body: formData,\n                headers: { 'Accept': 'application/json' }\n            });\n            if (!response.ok) throw new Error('No hay conexi칩n con el servidor');\n            const data = await response.json();\n            return data;\n\n        } catch (error) {\n            console.error('Codigo de error:', error);\n        }\n    }\n}\n\n\n"],"file":"persona.js"}